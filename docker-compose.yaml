version: '3.7'
services:
  db:
    image: postgres:16
    container_name: booking_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: booking_redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - "80:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    image: booking_image:latest
    build:
      context: .
    container_name: booking_celery
    env_file:
      - .env-non-dev
    command: sh -c "celery -A app.tasks.celery_app:celery_app worker -l INFO"
    depends_on:
      - redis
      - booking

  celery_beat:
    image: booking_image:latest
    build:
      context: .
    container_name: booking_celery_beat
    command: sh -c "celery -A app.tasks.celery_app:celery_app worker -l INFO -B"
    env_file:
      - .env-non-dev
    depends_on:
      - redis
      - booking


  flower:
    image: booking_image:latest
    build:
      context: .
    container_name: booking_flower
    env_file:
      - .env-non-dev
    command: sh -c "celery -A app.tasks.celery_app:celery_app flower"
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - booking

volumes:
  postgres_data:
